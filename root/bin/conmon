#!/bin/sh
#
# NAME
#        conmon - Restart service when some criterion fails
#
# SYNOPSIS
#        conmon <profile>
#
# DESCRIPTION
#        Whenever the `check` command fails, the `restart` command is called.
#
#        The time between periodic checks is fixed at a minimum of `interval`
#        seconds.  In reality, it will probably be longer than that due to
#        overheads.  There are also some additional delays between the
#        restarts to allow the service to act, and also to prevent frequent
#        but futile restarts when the criterion is unsatisfiable.  These
#        timings can be adjusted via the 'init_pause' and 'max_pause'
#        parameters.
#
#        The script must be run as root.  To reduce the danger of this,
#        `check` is executed as "nobody".
#
# OPTIONS
#        <profile>
#               Name of the profile script, which corresponds to
#               /etc/conmon/<profile>.conf.  Its should look like this:
#
#                 interval= # (seconds)
#                 check() {
#                     # (return 0 on success)
#                 }
#                 restart() {
#                     systemctl restart <service>
#                 }
#
#
#
# EXAMPLE
#        The script itself may be managed via a systemd unit such as:
#
#          # /etc/systemd/system/conmon@.service
#
#          [Unit]
#          Description=Restart service when some criterion fails
#
#          [Service]
#          ExecStart=/usr/local/bin/conmon %I
#          Restart=always
#          RestartSec=600
#
#          [Install]
#          WantedBy=multi-user.target
#
set -eu

if [ $# -ne 1 ]
then
    prog=`basename "$0"`
    printf >&2 "usage: %s PROFILE\n" "$prog"
    exit 2
fi

interval=600
user=nobody
init_pause=30
max_pause=600
restart() { :; }
profile=$1

. "/etc/conmon/$profile.sh"

pause=$init_pause

# test connectivity using 'curl' as unprivileged $user for extra safety;
# return 37 on immediate failure and 0 on subsequent failures
test_connectivity() {
    cd "${TMP:-/tmp}"
    if sudo -n -u "$user" profile="$profile" sh <<"EOF"

    check() { :; }

    . "/etc/conmon/$profile.sh"

    exitcode=37
    while check
    do
        if [ "$exitcode" -eq 1 ]
        then echo "Connection active."
        fi
        exitcode=0
        sleep "$interval"
    done
    echo "Connection failed."
    exit "$exitcode"

EOF
    then return 0
    else return "$?"
    fi
}

# allow some time for service to initialize
# since it may have been started in parallel
sleep "$pause"
while :
do

    # wait for failures; if it didn't fail immediately, reset the pause timer
    if test_connectivity
    then pause=$init_pause
    else
        exitcode=$?
        if [ "$exitcode" -ne 37 ]
        then exit "$exitcode"
        fi
    fi

    # restart and then pause for some time
    echo "Restarting ..."
    restart && :
    e=$?
    [ $e -eq 0 ] || printf >&2 "Warning: restart exited with %i.\n" $e
    printf "Restarted %s.\n" "$service"
    sleep "$pause"

    # double the pause timer, up to some maximum
    pause=`expr "$pause" \* 2`
    if [ "$pause" -gt "$max_pause" ]
    then pause=$max_pause
    fi

done
