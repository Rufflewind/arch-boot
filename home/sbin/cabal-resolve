#!/usr/bin/env python
import argparse, os, subprocess, sys, tempfile

p = argparse.ArgumentParser(description="""
Resolve the dependencies of the given package(s).  Similar to 'cabal freeze'
but you can specify an arbitrary package and the constraints are written to
stdout rather than to file.
""")
p.add_argument("--sandbox-config-file")
p.add_argument("--config-file")
p.add_argument("package", nargs="+")
args = p.parse_args()
if args.sandbox_config_file is None and os.path.isfile("cabal.sandbox.config"):
    args.sandbox_config_file = "cabal.sandbox.config"
config_file_flag = [] if args.config_file is None else [
    "--config-file=" + os.path.abspath(args.config_file)
]
sandbox_config_file_flag = [] if args.sandbox_config_file is None else [
    "--sandbox-config-file=" + os.path.abspath(args.sandbox_config_file)
]
with tempfile.TemporaryDirectory() as tmp_dir:
    with open(os.path.join(tmp_dir, "self.cabal"), "w") as f:
        f.write("""cabal-version: >=1.2\nlibrary\n build-depends: {}"""
                .format(", ".join(args.package)))
    e = subprocess.call(
        ["cabal"] + config_file_flag + sandbox_config_file_flag + ["freeze"],
        cwd=tmp_dir,
        stdout=sys.stderr)
    if e:
        sys.exit(e)
    with open(os.path.join(tmp_dir, "cabal.config")) as f:
        sys.stdout.write(f.read())
