#!/usr/bin/env python
import argparse, base64, hashlib, os, re

def hash_file(f):
    h = hashlib.md5()
    for s in f:
        h.update(s)
    return h.digest()

opts = argparse.ArgumentParser(
    description="""
Renames the file to contain its MD5 hash.
    """,
)
opts.add_argument(
    "FILE",
    nargs="+",
    help="filename",
)
args = opts.parse_args()

for fn in args.FILE:
    with open(fn, "rb") as f:
        tag = (base64.urlsafe_b64encode(hash_file(f))
               .decode("latin-1").rstrip("="))
        tag_len = len(tag)

        m = re.match(r"(%|.*\.)[-_0-9A-Za-z]{{{0}}}(\..*|$)"
                     .format(tag_len), fn)
        if m:
            x, y = m.groups()
            new_fn = "{0}{1}{2}".format(x, tag, y)
        else:
            base, ext = os.path.splitext(fn)
            new_fn = "{0}.{1}{2}".format(base, tag, ext)

        if fn == new_fn:
            print("{0} (unchanged)".format(fn))
        else:
            os.rename(fn, new_fn)
            print("{0} => {1}".format(fn, new_fn))
